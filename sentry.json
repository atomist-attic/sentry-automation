{
  "culprit": "CreateGitHubIssue.ts at helpers_1.replaceChatIdWithGitHubId.then.then.body",
  "event": {
    "_ref": 1209190,
    "_ref_version": 2,
    "culprit": "CreateGitHubIssue.ts in helpers_1.replaceChatIdWithGitHubId.then.then.body",
    "errors": [
      {
        "type": "js_no_source",
        "url": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/glue.js"
      },
      {
        "type": "js_no_source",
        "url": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/index.js"
      }
    ],
    "event_id": "f563e94ebf144665a1fecaf41ab74f3a",
    "extra": {
      "artifact": "@atomist/lifecycle-automation",
      "automation_client_name": "@atomist/lifecycle-automation",
      "automation_client_version": "0.8.2",
      "correlation-id": "92e82ba2-1da0-4de5-a54e-f42fb6859ef2",
      "git_owner": "atomist",
      "git_repo": "lifecycle-automation",
      "git_sha": "c0d9ad73276f2bc5fdab1899aa73781568c1c4d5",
      "invocation-id": "9ab1e4d4-2e1b-4c31-88e3-6b29df2a69d5",
      "node": "v9.11.1",
      "operation-name": "CreateGitHubIssue",
      "operation-type": "CommandHandler",
      "team-id": "T8G7LHAUD",
      "team-name": "cd-test",
      "version": "0.8.2"
    },
    "fingerprint": [
      "{{ default }}"
    ],
    "id": 20487039897,
    "key_id": 580353,
    "metadata": {
      "type": "TypeError",
      "value": "Cannot read property 'dsds' of undefined"
    },
    "modules": {
      "@atomist/automation-client": "0.17.0-20180518104139",
      "@atomist/automation-client-ext-logzio": "0.1.0-20180518141306",
      "@atomist/automation-client-ext-raven": "0.1.0-20180518112219",
      "@atomist/slack-messages": "0.12.1",
      "@octokit/rest": "14.0.9",
      "accepts": "1.3.5",
      "agent-base": "4.2.0",
      "ajv": "5.5.2",
      "ansi-regex": "3.0.0",
      "ansi-styles": "0.2.0",
      "apollo-cache": "1.1.8",
      "apollo-cache-inmemory": "1.2.1",
      "apollo-client": "2.3.1",
      "apollo-link": "1.2.2",
      "apollo-link-dedup": "1.0.9",
      "apollo-link-http": "1.5.4",
      "apollo-link-http-common": "0.2.4",
      "apollo-utilities": "1.0.12",
      "app-root-path": "2.0.1",
      "array-flatten": "1.1.1",
      "asciify": "1.3.5",
      "asn1": "0.2.3",
      "assert-plus": "1.0.0",
      "async-exit-hook": "2.0.1",
      "async-limiter": "1.0.0",
      "async-listener": "0.6.9",
      "asynckit": "0.4.0",
      "aws-sign2": "0.7.0",
      "aws4": "1.7.0",
      "axios": "0.17.1-proxy-fix",
      "axios-fetch": "1.1.0",
      "balanced-match": "1.0.0",
      "base64-js": "1.3.0",
      "before-after-hook": "1.1.0",
      "bl": "1.0.3",
      "body-parser": "1.18.3",
      "boom": "4.3.1",
      "brace-expansion": "1.1.11",
      "buffer-from": "1.0.0",
      "bytes": "3.0.0",
      "camelize": "1.0.0",
      "caseless": "0.12.0",
      "cf-nodejs-client": "0.13.0",
      "chalk": "2.4.1",
      "charenc": "0.0.2",
      "clone": "2.1.1",
      "co": "4.6.0",
      "color-convert": "1.9.1",
      "color-name": "1.1.3",
      "colors": "1.0.3",
      "combined-stream": "1.0.6",
      "concat-map": "0.0.1",
      "config": "1.30.0",
      "content-disposition": "0.5.2",
      "content-security-policy-builder": "2.0.0",
      "content-type": "1.0.4",
      "continuation-local-storage": "3.2.1",
      "cookie": "0.3.1",
      "cookie-signature": "1.0.6",
      "core-util-is": "1.0.2",
      "cors": "2.8.4",
      "crypt": "0.0.2",
      "cryptiles": "3.1.2",
      "cycle": "1.0.3",
      "dasherize": "2.0.0",
      "days": "1.1.1",
      "debug": "3.1.0",
      "deepmerge": "2.1.0",
      "delayed-stream": "1.0.0",
      "depd": "1.1.2",
      "destroy": "1.0.4",
      "dns-prefetch-control": "0.1.0",
      "dont-sniff-mimetype": "1.0.0",
      "ee-first": "1.1.1",
      "emitter-listener": "1.1.1",
      "encodeurl": "1.0.2",
      "encoding": "0.1.12",
      "err-code": "1.1.2",
      "es6-promisify": "5.0.0",
      "escape-html": "1.0.3",
      "escape-string-regexp": "1.0.5",
      "esprima": "4.0.0",
      "etag": "1.8.1",
      "expect-ct": "0.1.1",
      "express": "4.16.3",
      "extend": "3.0.1",
      "extsprintf": "1.3.0",
      "fast-deep-equal": "1.1.0",
      "fast-json-stable-stringify": "2.0.0",
      "finalhandler": "1.1.1",
      "find-up": "2.1.0",
      "follow-redirects": "1.4.1",
      "forever-agent": "0.6.1",
      "form-data": "2.3.2",
      "format-date": "1.0.0",
      "forwarded": "0.1.2",
      "frameguard": "3.0.0",
      "fresh": "0.5.2",
      "fs-extra": "5.0.0",
      "fs.realpath": "1.0.0",
      "generate-function": "2.0.0",
      "generate-object-property": "1.2.0",
      "git-up": "2.0.10",
      "git-url-parse": "8.3.1",
      "glob": "7.1.2",
      "graceful-fs": "4.1.11",
      "graphql": "0.12.3",
      "graphql-anywhere": "4.1.10",
      "graphql-tag": "2.9.2",
      "har-schema": "2.0.0",
      "har-validator": "5.0.3",
      "has-color": "0.1.7",
      "has-flag": "3.0.0",
      "hawk": "6.0.2",
      "helmet": "3.12.1",
      "helmet-csp": "2.7.0",
      "hide-powered-by": "1.0.0",
      "hoek": "4.2.1",
      "hot-shots": "5.4.1",
      "hpkp": "2.0.0",
      "hsts": "2.1.0",
      "http-errors": "1.6.3",
      "http-signature": "1.2.0",
      "https-proxy-agent": "2.2.1",
      "iconv-lite": "0.4.23",
      "ienoopen": "1.0.0",
      "inflight": "1.0.6",
      "inherits": "2.0.3",
      "ipaddr.js": "1.6.0",
      "is-array-buffer": "1.0.1",
      "is-buffer": "1.1.6",
      "is-my-ip-valid": "1.0.0",
      "is-my-json-valid": "2.17.2",
      "is-property": "1.0.2",
      "is-ssh": "1.3.0",
      "is-stream": "1.1.0",
      "is-typedarray": "1.0.0",
      "isarray": "1.0.0",
      "isstream": "0.1.2",
      "js-yaml": "3.11.0",
      "json-schema": "0.2.3",
      "json-schema-traverse": "0.3.1",
      "json-stringify-safe": "5.0.1",
      "jsonfile": "4.0.0",
      "jsonpointer": "4.0.1",
      "jsprim": "1.4.1",
      "left-pad": "1.3.0",
      "locate-path": "2.0.0",
      "lodash": "4.17.10",
      "lodash.assign": "4.2.0",
      "lodash.reduce": "4.6.0",
      "logzio-nodejs": "0.4.10",
      "lru_map": "0.3.3",
      "md5": "2.2.1",
      "media-typer": "0.3.0",
      "merge-descriptors": "1.0.1",
      "methods": "1.1.2",
      "metrics": "0.1.15",
      "mime": "1.4.1",
      "mime-db": "1.33.0",
      "mime-types": "2.1.18",
      "minimatch": "3.0.4",
      "months": "1.2.0",
      "ms": "2.0.0",
      "murmurhash-js": "1.0.0",
      "negotiator": "0.6.1",
      "nocache": "2.0.0",
      "node-cache": "4.2.0",
      "oauth-sign": "0.8.2",
      "object-assign": "4.1.1",
      "on-finished": "2.3.0",
      "once": "1.4.0",
      "p-limit": "1.2.0",
      "p-locate": "2.0.0",
      "p-try": "1.0.0",
      "parse-domain": "2.0.0",
      "parse-url": "1.3.11",
      "parseurl": "1.3.2",
      "passport": "0.4.0",
      "passport-http": "0.3.0",
      "passport-http-bearer": "1.0.1",
      "passport-http-header-token": "1.1.0",
      "passport-strategy": "1.0.0",
      "path-exists": "3.0.0",
      "path-is-absolute": "1.0.1",
      "path-to-regexp": "0.1.7",
      "pause": "0.0.1",
      "performance-now": "2.1.0",
      "pinkie-promise": "2.0.1",
      "pkginfo": "0.3.1",
      "platform": "1.3.5",
      "promise-retry": "1.1.1",
      "protocols": "1.4.6",
      "proxy-addr": "2.0.3",
      "qs": "6.5.2",
      "range-parser": "1.2.0",
      "raven": "2.6.2",
      "raw-body": "2.3.3",
      "referrer-policy": "1.1.0",
      "request": "2.85.0",
      "restler": "3.4.0",
      "retry": "0.10.1",
      "safe-buffer": "5.1.1",
      "safer-buffer": "2.1.2",
      "sax": "0.5.8",
      "semver": "5.5.0",
      "send": "0.16.2",
      "serialize-error": "2.1.0",
      "serve-static": "1.13.2",
      "setprototypeof": "1.1.0",
      "shimmer": "1.2.0",
      "shortid": "2.2.8",
      "sntp": "2.1.0",
      "source-map-support": "0.5.6",
      "sshpk": "1.14.1",
      "stack-trace": "0.0.10",
      "statuses": "1.5.0",
      "string-templater": "1.0.0",
      "stringstream": "0.0.5",
      "strip-ansi": "4.0.0",
      "supports-color": "5.4.0",
      "symbol-observable": "1.2.0",
      "timed-out": "4.0.1",
      "toposort": "1.0.7",
      "tough-cookie": "2.3.4",
      "tunnel-agent": "0.6.0",
      "type-is": "1.6.16",
      "universalify": "0.1.1",
      "unpipe": "1.0.0",
      "url-template": "2.0.8",
      "util-deprecate": "1.0.2",
      "utils-merge": "1.0.1",
      "uuid": "3.2.1",
      "vary": "1.1.2",
      "verror": "1.10.0",
      "winston": "2.4.2",
      "winston-logzio": "1.0.7",
      "wrappy": "1.0.2",
      "ws": "4.1.0",
      "x-xss-protection": "1.1.0",
      "xml2js": "0.4.0",
      "xmlbuilder": "10.0.0",
      "xtend": "4.0.1",
      "yaml": "0.2.3",
      "zen-observable": "0.8.8",
      "zen-observable-ts": "0.8.9"
    },
    "project": 1209190,
    "received": 1526656041,
    "sdk": {
      "client_ip": "87.167.223.108",
      "name": "raven-node",
      "version": "2.6.2"
    },
    "sentry.interfaces.Breadcrumbs": {},
    "sentry.interfaces.Exception": {
      "exc_omitted": null,
      "values": [
        {
          "stacktrace": {
            "frames": [
              {
                "abs_path": "internal/process/next_tick.js",
                "colno": 7,
                "filename": "internal/process/next_tick.js",
                "function": "process._tickCallback",
                "in_app": false,
                "lineno": 182,
                "module": "next_tick"
              },
              {
                "function": "null.\u003canonymous\u003e",
                "in_app": false
              },
              {
                "abs_path": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/glue.js",
                "colno": 31,
                "context_line": "      var returned = original.apply(this, arguments);",
                "filename": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/glue.js",
                "function": "null.\u003canonymous\u003e",
                "in_app": false,
                "lineno": 188,
                "module": "async-listener:glue",
                "post_context": [
                  "",
                  "      /*",
                  "       * after handlers (not run if original throws)",
                  "       */",
                  "      inAsyncTick = true;",
                  "      for (i = 0; i \u003c length; ++i) {",
                  "        if ((list[i].flags \u0026 HAS_AFTER_AL) \u003e 0) {"
                ],
                "pre_context": [
                  "        if ((list[i].flags \u0026 HAS_BEFORE_AL) \u003e 0) {",
                  "          list[i].before(this, values[list[i].uid]);",
                  "        }",
                  "      }",
                  "      inAsyncTick = false;",
                  "",
                  "      // save the return value to pass to the after callbacks"
                ]
              },
              {
                "abs_path": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/index.js",
                "colno": 70,
                "context_line": "          var result = (promise.__asl_wrapper || propagateAslWrapper)(this, fn, val, next);",
                "filename": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/index.js",
                "function": "null.\u003canonymous\u003e",
                "in_app": false,
                "lineno": 539,
                "module": "async-listener:index",
                "post_context": [
                  "          if (result.error) {",
                  "            throw result.errorVal",
                  "          } else {",
                  "            return result.returnVal",
                  "          }",
                  "        });",
                  "      }"
                ],
                "pre_context": [
                  "      return next;",
                  "",
                  "      // wrap callbacks (success, error) so that the callbacks will be called as a",
                  "      // continuations of the resolve or reject call using the __asl_wrapper created above.",
                  "      function bind(fn) {",
                  "        if (typeof fn !== 'function') return fn;",
                  "        return wrapCallback(function (val) {"
                ]
              },
              {
                "abs_path": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/glue.js",
                "colno": 31,
                "context_line": "      var returned = original.apply(this, arguments);",
                "filename": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/glue.js",
                "function": "null.\u003canonymous\u003e",
                "in_app": false,
                "lineno": 188,
                "module": "async-listener:glue",
                "post_context": [
                  "",
                  "      /*",
                  "       * after handlers (not run if original throws)",
                  "       */",
                  "      inAsyncTick = true;",
                  "      for (i = 0; i \u003c length; ++i) {",
                  "        if ((list[i].flags \u0026 HAS_AFTER_AL) \u003e 0) {"
                ],
                "pre_context": [
                  "        if ((list[i].flags \u0026 HAS_BEFORE_AL) \u003e 0) {",
                  "          list[i].before(this, values[list[i].uid]);",
                  "        }",
                  "      }",
                  "      inAsyncTick = false;",
                  "",
                  "      // save the return value to pass to the after callbacks"
                ]
              },
              {
                "abs_path": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/index.js",
                "colno": 23,
                "context_line": "      nextResult = fn.call(ctx, result);",
                "filename": "/Users/cdupuis/Development/atomist/lifecycle-automation/node_modules/async-listener/index.js",
                "function": "propagateAslWrapper",
                "in_app": false,
                "lineno": 502,
                "module": "async-listener:index",
                "post_context": [
                  "      return {returnVal: nextResult, error: false}",
                  "    } catch (err) {",
                  "      return {errorVal: err, error: true}",
                  "    } finally {",
                  "      // Wrap any resulting futures as continuations.",
                  "      if (nextResult instanceof Promise) {",
                  "        next.__asl_wrapper = function proxyWrapper() {"
                ],
                "pre_context": [
                  "      promise.__asl_wrapper = wrapCallback(propagateAslWrapper);",
                  "    }",
                  "  }",
                  "",
                  "  function propagateAslWrapper(ctx, fn, result, next) {",
                  "    var nextResult;",
                  "    try {"
                ]
              },
              {
                "abs_path": "/Users/cdupuis/Development/atomist/lifecycle-automation/src/handlers/command/github/CreateGitHubIssue.ts",
                "colno": 36,
                "context_line": "                (body as any).dsds.dsds.sds.dsd;",
                "filename": "/Users/cdupuis/Development/atomist/lifecycle-automation/src/handlers/command/github/CreateGitHubIssue.ts",
                "function": "helpers_1.replaceChatIdWithGitHubId.then.then.body",
                "in_app": true,
                "lineno": 91,
                "module": "CreateGitHubIssue.ts",
                "post_context": [
                  "                return github.api(this.githubToken, this.apiUrl).issues.create({",
                  "                    owner: this.owner,",
                  "                    repo: this.repo,",
                  "                    title: this.title,",
                  "                    body,",
                  "                });",
                  "            })"
                ],
                "pre_context": [
                  "    public handle(ctx: HandlerContext): Promise\u003cHandlerResult\u003e {",
                  "",
                  "        return replaceChatIdWithGitHubId(this.body, this.teamId, ctx)",
                  "            .then(body =\u003e {",
                  "                return trimQuotes(body);",
                  "            })",
                  "            .then(body =\u003e {"
                ]
              }
            ]
          },
          "type": "TypeError",
          "value": "Cannot read property 'dsds' of undefined"
        }
      ]
    },
    "sentry.interfaces.Message": {
      "message": "TypeError: Cannot read property 'dsds' of undefined"
    },
    "tags": [
      [
        "environment",
        "local"
      ],
      [
        "level",
        "error"
      ],
      [
        "sentry:release",
        "0.8.2"
      ],
      [
        "server_name",
        "@atomist/lifecycle-automation"
      ],
      [
        "transaction",
        "CreateGitHubIssue.ts at helpers_1.replaceChatIdWithGitHubId.then.then.body"
      ]
    ],
    "type": "error",
    "version": "5"
  },
  "id": "559309174",
  "level": "error",
  "logger": null,
  "message": "TypeError: Cannot read property 'dsds' of undefined",
  "project": "lifecycle",
  "project_name": "Lifecycle",
  "project_slug": "lifecycle",
  "url": "https://sentry.io/atomist/lifecycle/issues/559309174/"
}